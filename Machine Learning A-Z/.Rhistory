dataset <- read.csv('Data.csv')
setwd("~/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
dataset <- read.csv('Data.csv')
dataset
dataset
dataset
ifelse
dataset$Age <- ifelse(is.na(dataset$Age),
ave(dataset$Age,FUN = function(x) mean(x,na.rm = T)),
dataset$Age)
dataset
dataset$Salary <- ifelse(is.na(dataset$Salary),
ave(dataset$Salary,FUN = function(x) mean(x,na.rm = T)),
dataset$Salary)
dataset
dataset$Age[is.na(dataset$Age)]
dataset <- read.csv('Data.csv')
dataset
dataset$Age[is.na(dataset$Age)]
mean(dataset$Age)
mean(dataset$Age, na.rm = T)
dataset$Age[is.na(dataset$Age)] <- mean(dataset$Age, na.rm = T)
dataset$Age[is.na(dataset$Age)] <- mean(dataset$Age, na.rm = T)
dataset$Age[is.na(dataset$Age)]
dataset$Salary[is.na(dataset$Salary)] <- mean(dataset$Salary, na.rm = T)
dataset
dataset$Salary[is.na(dataset$Salary)]
dataset$Salary <- ifelse(is.na(dataset$Salary),
ave(dataset$Salary, dataset$Country, FUN = function(x) mean(x, na.rm = T)),
dataset$Salary)
dataset
ave(dataset$Salary, dataset$Country, FUN = function(x) mean(x, na.rm = T))
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset
dataset$Purchased = factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
dataset
library(caTools)
library(caTools)
set.seed(123)
split <- sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set <- subset(dataset, split == T)
test_set <- subset(dataset, split == T)
training_set
test_set
test_set <- subset(dataset, split == F)
training_set
test_set
training_set
training_set[,2:3] <- scale(training_set)
training_set[,2:3] <- scale(training_set[,2:3])
test_set[,2:3] <- scale(test_set[,2:3])
training_set
test_set
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset <- read.csv('Salary_Data.csv')
dataset
library(caTools)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set <- subset(dataset, split == T)
test_set <- subset(dataset, split == F)
training_set
test_set
regressor <- lm(formula = Salary ~ YearsExperience,
data = training_set)
summary(regressor)
y_pred <- predict(regressor, newdata = test_set)
y_pred
library(ggplot2)
ggplot() +
geom_point(aes(x =training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
install.packages('ggplot2')
dataset <- read.csv('Salary_Data.csv')
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset <- read.csv('Salary_Data.csv')
dataset
library(caTools)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set <- subset(dataset, split == T)
test_set <- subset(dataset, split == F)
training_set
test_set
regressor <- lm(formula = Salary ~ YearsExperience,
data = training_set)
summary(regressor)
y_pred <- predict(regressor, newdata = test_set)
y_pred
install.packages('ggplot2')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') + stat_smooth() +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') + stat_smooth() +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() + stat_smooth() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red', stat_smooth()) +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() + stat_smooth() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
stat_smooth(mapping = aes(x = training_set$YearsExperience, y = training_set$Salary),
method = 'lm',colour = 'blue') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
stat_smooth(mapping = aes(x = test_set$YearsExperience, y = test_set$Salary),
method = 'lm',colour = 'blue') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
stat_smooth(mapping = aes(x = training_set$YearsExperience, y = training_set$Salary),
method = 'lm',colour = 'blue') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
stat_smooth(mapping = aes(x = test_set$YearsExperience, y = test_set$Salary),
method = 'lm',colour = 'blue') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
stat_smooth(mapping = aes(x = training_set$YearsExperience, y = training_set$Salary),
method = 'lm',colour = 'blue') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
stat_smooth(mapping = aes(x = test_set$YearsExperience, y = test_set$Salary),
method = 'lm',colour = 'blue') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
setwd("~/GitHub/DS-RP-ML/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
mlrdata = read.csv('50_Startup.csv')
mlrdata <- read.csv('50_Startups.csv')
head(mlrdata)
mlrdata$State <- factor(mlrdata$State,
levels = c('New York', 'California','Florida'),
labels = c(1,2,3))
library(caTools)
set.seed(123)
split <- sample.split(mlrdata$Profit, SplitRatio = 0.8)
mlrtrain <- subset(mlrdata, split == T)
mlrtest <- subset(mlrdata, split == F)
summary(mlrtrain)
summary(mlrreg)
mlrreg <- lm(formula = Profit ~ ., data = mlrtrain)
summary(mlrreg)
mlr_pred <- predict(mlrreg, newdata = mlrtest)
mlr_pred
mlrtest
summary(mlrreg)
mlrreg <- lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = mlrtrain)
summary(mlrreg)
mlrreg <- lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = mlrtrain)
summary(mlrreg)
mlrreg <- lm(formula = Profit ~ R.D.Spend,
data = mlrtrain)
summary(mlrreg)
library(ggplot2)
ggplot() +
geom_point(aes(x = mlrtrain$R.D.Spend, y = mlrtrain$Profit),
colour = 'red') +
stat_smooth(mapping = aes(x = mlrtrain$R.D.Spend, y = mlrtrain$Profit),
method = 'lm',colour = 'blue') +
geom_line(aes(x = mlrtrain$R.D.Spend, y = predict(mlrreg, newdata = mlrtrain)),
colour = 'blue') +
ggtitle('Startup companys Profit') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x = mlrtest$R.D.Spend, y = mlrtest$Profit),
colour = 'red') +
geom_line(aes(x = mlrtest$R.D.Spend, y = predict(mlrreg, newdata = mlrtest)),
colour = 'blue') +
ggtitle('Startup companys Profit') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x = mlrtest$R.D.Spend, y = mlrtest$Profit),
colour = 'red') +
stat_smooth(mapping = aes(x = mlrtest$R.D.Spend, y = mlrtest$Profit),
method = 'lm',colour = 'blue') +
geom_line(aes(x = mlrtest$R.D.Spend, y = predict(mlrreg, newdata = mlrtest)),
colour = 'blue') +
ggtitle('Startup companys Profit') +
xlab('R.D.Spend') +
ylab('Profit')
setwd("~/GitHub/DS-RP-ML/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression")
setwd("~/GitHub/DS-RP-ML/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression")
prsal <- read.csv('Position_Salaries.csv')
prsal
prsal <- prsal[2:3]
prsal
library(caTools)
lin_reg <- lm(formula = Salary ~ .,
data = prsal)
summary(lin_reg)
prsal$Level2 <- prsal$Level^2
prsal
prsal$Level3 <- prsal$Level^3
prsal
poly_reg <- lm(formula = Salary ~ .,
data = prsal)
summary(poly_reg)
ggplot() +
geom_point(aes(x = prsal$level, y = prsal$Salary),
color = 'red') +
geom_line(aes(x = prsal$level, y = predict(lin_reg, newdata = prsal)),
color = 'red') +
ggtitle('Truth or Bluff (Liner regression)') +
xlab('Leval') + ylab('Salary')
ggplot() +
geom_point(aes(x = prsal$level, y = prsal$Salary),
color = 'red') +
geom_line(aes(x = prsal$level, y = predict(lin_reg, newdata = prsal)),
color = 'red') +
ggtitle('Truth or Bluff (Liner regression)') +
xlab('Leval') + ylab('Salary')
ggplot() +
geom_point(aes(x = prsal$Level, y = prsal$Salary),
color = 'red') +
geom_line(aes(x = prsal$Level, y = predict(lin_reg, newdata = prsal)),
color = 'blue') +
ggtitle('Truth or Bluff (Liner regression)') +
xlab('Leval') + ylab('Salary')
ggplot() +
geom_point(aes(x = prsal$Level, y = prsal$Salary),
color = 'red') +
geom_line(aes(x = prsal$Level, y = predict(poly_reg, newdata = prsal)),
color = 'blue') +
ggtitle('Truth or Bluff (Polynomial regression)') +
xlab('Leval') + ylab('Salary')
predict(poly_reg, 6.5)
prsal$Level4 <- prsal$Level^4
ggplot() +
geom_point(aes(x = prsal$Level, y = prsal$Salary),
color = 'red') +
geom_line(aes(x = prsal$Level, y = predict(poly_reg, newdata = prsal)),
color = 'blue') +
ggtitle('Truth or Bluff (Polynomial regression)') +
xlab('Leval') + ylab('Salary')
poly_reg <- lm(formula = Salary ~ .,
data = prsal)
ggplot() +
geom_point(aes(x = prsal$Level, y = prsal$Salary),
color = 'red') +
geom_line(aes(x = prsal$Level, y = predict(poly_reg, newdata = prsal)),
color = 'blue') +
ggtitle('Truth or Bluff (Polynomial regression)') +
xlab('Leval') + ylab('Salary')
predict(lin_reg,6.5)
predict(lin_reg,data.frame(Level = 6.5))
predict(poly_reg,data.frame(Level = 6.5,
Level2 = 6.5^2,
Level2 = 6.5^3,
Level4 = 6.5^4,))
predict(poly_reg,data.frame(Level = 6.5,
Level2 = 6.5^2,
Level2 = 6.5^3,
Level4 = 6.5^4))
predict(poly_reg,data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
poly_reg4 = lm(formula= Salary ~ poly(Level, 4),
data=dataset)
predict(poly_reg, data.frame(Level =6.5))
poly_reg4 <- lm(formula= Salary ~ poly(Level, 4),
data=prsal)
predict(poly_reg4, data.frame(Level =6.5))
poly(Level, 4)
predict(poly_reg,data.frame(Level = 6.5)
)
predict(poly_reg,data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
install.packages('e1071')
library((e1071))
library((e1071)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Regression Model results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
# Visualising the Regression Model results (for higher resolution and smoother curve)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
library(e1071)
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
dataset
regressor <- svm(formula = salary ~ .,
data = dataset,
type = 'eps-regression')
regressor <- svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR)') +
xlab('Level') +
ylab('Salary')
predict(regressor, data.frame(Level = 6.5))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
